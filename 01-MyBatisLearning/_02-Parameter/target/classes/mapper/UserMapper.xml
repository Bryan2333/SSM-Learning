<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bryan2.dao.UserMapper">
    <!-- 按照 id 查询指定用户的信息  -->
    <!-- 如果是一个参数，随意取值
        通过 #{} 进行取值，通过 key 获得对应的 value 值
    -->
    <select id="selectUserById" resultType="User">
        SELECT *
        FROM tb_user
        WHERE `id` = #{id}
    </select>

    <!--  验证用户名和密码  -->
    <select id="selectUserByUsernameAndPasswd" resultType="User">
        SELECT *
        FROM tb_user
        WHERE `username` = #{username}
          AND `password` = #{passwd}
    </select>

    <!--  添加一条用户记录 int insertUser(Map<String, String> map);  -->
    <insert id="insertUserByMap">
        INSERT INTO tb_user
        VALUES (NULL, #{username}, #{password}, #{account}, #{permission})
    </insert>

    <!--
        修改用户信息
        需要使用 parameterType 属性指定实体类对象的类名
        key值需要对应实体类对象的属性
    -->
    <update id="updateUserByPassingInstance" parameterType="User">
        UPDATE tb_user
        SET `password`   = #{password},
            `account`    = #{account},
            `permission` = #{permission}
        WHERE `username` = #{username}
    </update>

    <!-- 查询用户数量 -->
    <select id="selectCount" resultType="Integer">
        SELECT COUNT(*)
        FROM tb_user
    </select>

    <!--  模糊查询姓张的用户
        因为 #{} 会自动为字符串或日期添加单引号，导致SQL语法错误，因此这里使用 ${} 手动添加引号处理
     -->
    <select id="selectUserByName" resultType="User">
        SELECT *
        FROM tb_user
        WHERE username LIKE '${username}%'
    </select>
</mapper>